image: Visual Studio 2017

max_jobs: 1

environment:
  unity_username: dyob@lunaport.net
  unity_password:
    secure: bfiZ9ZLA6U2ue+6tpKwQ4ivRaePwVk/+RM7PoO7K6bQ=
  unity_serial:
    secure: cqmfJplindf90Uy/n53b58LNn5LVSxicPEXuFFBnnns=
  ANDROID_HOME: "C:\\Program Files (x86)\\Android\\android-sdk"
  ANDROID_NDK_HOME: "C:\\android-ndk-r16b"

init:
  - ps: Install-Module -Name UnitySetup
  - ps: $unity_credential = New-Object Management.Automation.PSCredential ($env:unity_username, ($env:unity_password | ConvertTo-SecureString -AsPlainText -Force))

install:
  - ps: Install-UnitySetupInstance -Installers (Find-UnitySetupInstaller -Version 2018.4.6f1 -Components Windows,Android)
  - ps: $unity = Start-UnityEditor -BatchMode -Latest -PassThru -Quit -Wait -LogFile License.log -Credential $unity_credential -Serial ($env:unity_serial | ConvertTo-SecureString -AsPlainText -Force)
  - ps: type License.log
  - ps: |
      if ($unity.ExitCode) {
        exit 1
      }
  - ps: appveyor DownloadFile https://dl.google.com/android/repository/android-ndk-r16b-windows-x86_64.zip
  - ps: 7z x android-ndk-r16b-windows-x86_64.zip -o"$env:ANDROID_NDK_HOME\\.."
  - cmd: echo y | "C:\Program Files (x86)\Android\android-sdk\tempToolsDir\bin\sdkmanager.bat" --sdk_root="C:\Program Files (x86)\Android\android-sdk" tools platform-tools
  - cmd: echo y | "C:\Program Files (x86)\Android\android-sdk\tempToolsDir\bin\sdkmanager.bat" --sdk_root="C:\Program Files (x86)\Android\android-sdk" "build-tools;28.0.3"
  - cmd: echo y | "C:\Program Files (x86)\Android\android-sdk\tempToolsDir\bin\sdkmanager.bat" --sdk_root="C:\Program Files (x86)\Android\android-sdk" "platforms;android-28"

build_script:
  - ps: $unity = Start-UnityEditor -BatchMode -Latest -PassThru -Wait -LogFile Build.log -BuildTarget Android -ExecuteMethod UnityCIExample.Builder.BuildPlayer
  - ps: type Build.log
  - ps: |
      if ($unity.ExitCode) {
        exit 1
      }

test_script:
  - ps: $unity = Start-UnityEditor -BatchMode -Latest -PassThru -Wait -LogFile Test.log -RunEditorTests
  - ps: type Test.log
  - ps: |
      $webclient = New-Object "System.Net.WebClient"
      $webclient.UploadFile("https://ci.appveyor.com/api/testresults/nunit/$($env:APPVEYOR_JOB_ID)", (dir TestResults-*.xml).FullName)
      if ($unity.ExitCode) {
        exit 1
      }

on_finish:
  - ps: $unity = Start-UnityEditor -BatchMode -Latest -PassThru -Quit -Wait -LogFile ReturnLicense.Log -Credential $unity_credential -ReturnLicense
  - ps: type ReturnLicense.Log
  - ps: |
      if ($unity.ExitCode) {
        exit 1
      }
